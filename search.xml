<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>计算机网络体系结构</title>
      <link href="/2022/043050802.html"/>
      <url>/2022/043050802.html</url>
      
        <content type="html"><![CDATA[<h1 id="计算机网络体系结构"><a href="#计算机网络体系结构" class="headerlink" title="计算机网络体系结构"></a>计算机网络体系结构</h1><h2 id="计算机网络的概念"><a href="#计算机网络的概念" class="headerlink" title="计算机网络的概念"></a>计算机网络的概念</h2><ul><li>计算机网络是一个将分散的，具有独立功能的计算机系统，通过通信设备与线路连接起来，由功能完善的软件实现资源共享和信息传递的系统。<h2 id="计算机网络的组成"><a href="#计算机网络的组成" class="headerlink" title="计算机网络的组成"></a>计算机网络的组成</h2><h3 id="共分三类："><a href="#共分三类：" class="headerlink" title="共分三类："></a>共分三类：</h3></li><li>组成部分：硬件，软件，协议。<br>1.硬件：主机（端系统），通信链路（双绞线，光纤），交换设备（路由器，交换机），通信处理机（网卡）<br>2.软件：实现资源共享的软件和方便用户使用的工具软件（邮件收发，聊天程序等）<br>3.协议：计网核心，“交通规则”规定网络传输数据时所遵循的规范  </li><li>工作方式：边缘部分和核心部分<br>1.边缘部分：主机，用来通信和资源共享<br>2.核心部分：网络和连接网络的路由器，为边缘提供连通和交换</li><li>功能组成：通信子网和资源子网<br>1.通信子网：传输介质，通信设备，网络协议。<br>2.资源子网：资源共享的设备及其软件<h2 id="计算机网络的功能"><a href="#计算机网络的功能" class="headerlink" title="计算机网络的功能"></a>计算机网络的功能</h2></li><li>数据通信</li><li>资源共享</li><li>分布式处理</li><li>提高可靠性</li><li>负载均衡<h2 id="计算机网络的分类"><a href="#计算机网络的分类" class="headerlink" title="计算机网络的分类"></a>计算机网络的分类</h2><h3 id="共分六类："><a href="#共分六类：" class="headerlink" title="共分六类："></a>共分六类：</h3></li><li>分布范围：<br>广域网WAN，城域网MAN，局域网LAN，个人区域网PAN</li><li>传输技术：<br>广播式网络，点对点网络（区别于是否分组存储转发和路由选择机制）</li><li>拓扑结构：<br>总线形，星形，环形，网状（节点与通信链路的几何关系），也可以互联成为更复杂网络结构</li><li>使用者：<br>公用网，专用网</li><li>交换技术：<br>1.电路交换网络：点对点，建立连接，传输数据，断开连接，传统电话网络。优点：数据直接传送，时延小。缺点：线路利用率低，无差错控制。<br>2.报文交换网络：加源地址和目标地址，封装成为报文段传送。也叫存储转发网络，优点：充分利用线路，一对多多对一，差错控制。缺点：资源开销大，缓冲时延，缓冲区难管理。<br>3.分组交换网络：把数据封装成固定长度数据块，块红加上目的地址和源地址等辅助信息成为分组，以存储-转发传输。优点：报文网络优点+缓冲容易管理，包时延小，现在主流网络的选择。</li><li>传输介质：<br>1.有线：双绞线网络，同轴电缆网络等。<br>2.无线：蓝牙，微波，无线电等。  <h2 id="计算机网络的性能指标"><a href="#计算机网络的性能指标" class="headerlink" title="计算机网络的性能指标"></a>计算机网络的性能指标</h2></li><li>带宽：bandwidth，单位Hz，表示网络通信线路传输数据能力，“最高数据传输速率”。</li><li>时延：delay，端到端传送总时间，总时延=发送时延+传播时延+处理时延+排队时延。</li><li>时延带宽积：传播时延x信道带宽。</li><li>往返时延：round-trip-time”RTT”,从发送端开始到接收到接收端的确认历经总时延。</li><li>吞吐量：throughput，单位时间内通过某个网络数据量。</li><li>速率：speed，计算机网络上主机在数据信道上传送数据的速率，最高速率为带宽，单位为比特/秒，b/s。  </li><li>信道利用率： 有数据通过的时间/有无数据通过的时间。<h2 id="计算机网络的体系结构"><a href="#计算机网络的体系结构" class="headerlink" title="计算机网络的体系结构"></a>计算机网络的体系结构</h2><h3 id="计算机网络的分层结构"><a href="#计算机网络的分层结构" class="headerlink" title="计算机网络的分层结构"></a>计算机网络的分层结构</h3></li><li>计算机网络各层及其协议的集合就是计算机网络的体系结构。</li><li>每层活动元素成为实体，每层传送的数据单位不同，但都有两部分：数据服务单元SDU和协议控制单元PCI，共同组成协议数据单元PDU。</li><li>从上到下包装,从下到上拆解，n-SDU+n-PCI=n-n-PDU=(n-1)-SDU。</li><li>每层使用下层的服务，服务上层：最底层只提供服务，最高层只面向用户服务，中间层既享受服务也服务上层。</li><li>每层只能调用相邻层接口服务。</li><li>两台主机通信的时候对等层有一条直接信道。<h3 id="计算机网络协议，接口，服务"><a href="#计算机网络协议，接口，服务" class="headerlink" title="计算机网络协议，接口，服务"></a>计算机网络协议，接口，服务</h3></li><li>协议：为网络数据交换建立的规则，标准，约定。控制两个/多个对等实体进行通信的规则的集合，是水平的，不对等实体之间没有协议。包括语法，语义，同步。</li><li>接口：同一个结点内相邻层之间交换信息的连接点，系统内部的规定，n+1层通过访问n层的SAP（服务访问点）来获取服务，每个SAP有自己的地址。</li><li>服务：下层为紧邻的上层提供的功能调用，是垂直的。上下层提供服务的时候有四类原语：请求request，指示indication，响应response，证实confirmation。<br>计算机提供的服务有三种：<br>1.面向连接服务和无连接服务：面向连接必须先建立连接分配资源，结束再释放连接和资源，三个阶段，如TCP，无连接服务只需要直接发送数据，把带目的地的包传送在线路上，不可靠的服务，Best-Effort-Delivery，如IP和UDP<br>2.可靠服务和不可靠服务：可靠指的是有纠错，检错，应答机制，保证正确可靠传输数据，而不可靠是尽量正确可靠，尽力而为的服务。<br>3.有应答服务和无应答服务：是否有接受方接收数据之后向发送方发送应答，文件传输服务就是有应答，WWW就是无应答<h3 id="ISO-OSI与TCP-IP模型"><a href="#ISO-OSI与TCP-IP模型" class="headerlink" title="ISO/OSI与TCP/IP模型"></a>ISO/OSI与TCP/IP模型</h3></li><li>OSI模型：七层，从下到上分别为：物理层，数据链路层，网络层，传输层，会话层，表示层，应用层。<br>低三层为通信子网（为了连接网络的通信设备），传输层承上启下，上三层为资源子网（相当于计算机，完成数据处理）。</li><li>TCP/IP模型：四层，从下到上分别为：网络接口层，网际层，传输层，应用层。  </li><li>两者共同点：都采取分层结构。都基于独立协议栈的概念。都可以解决异构网络的互连（不同厂家计算机互联）</li><li>两者不同点：<br>OSI产生服务，协议，接口概念，与面向对象思想吻合。OSI先产生的模型而没有对应协议，TCP/TP先产生了协议再产生的模型。<br>TCP/IP设计之初就考虑了异构网络的问题，并用IP分层，OSI后来才在网络层中产生子层完成类似IP的功能。<br>OSI支持无连接和面向连接服务，但在传输层只有面向连接服务，而TCP/IP认为可靠性是端到端的问题，网际层仅有无连接，传输层支持两种模式。</li><li>我们折中，综合两个模型来划分五层：物理层，数据链路层，网络层，传输层，应用层。发送方用户给出自然语言通过应用层转化为数据，从上到下层层包装数据，接收方从下到上层层逆向拆解数据把数据提交给用户。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown介绍及使用教程</title>
      <link href="/2022/04296929.html"/>
      <url>/2022/04296929.html</url>
      
        <content type="html"><![CDATA[<h2 id="举个例子解释"><a href="#举个例子解释" class="headerlink" title="举个例子解释"></a>举个例子解释</h2><p> 大部分作家都是用 Word 或 Pages 写作，过去的文档也大都以微软的 .doc, .docx 格式或是苹果的 Pages 格式储存。还有人为了保证文稿发给谁都能正常打开，会用 .txt 格式。但是.doc 或 Pages 格式有如下问题：</p><p>1.不一定谁都能打开。用 Windows 的人打不开苹果的 .pages 文件，用旧版 Word 的人不一定能打开你用新版 Word 写的稿子。</p><p>2.对方看到的稿子的样子和你自己看到的可能差别很大。</p><p>3.大部分人电脑上的Office都是盗版的，使用时很容易出问题。</p><p>4.用.txt 写的稿子没有格式，这就给编辑你文章的人带来困扰了。</p><h2 id="这就是-Markdown-登场的时候了"><a href="#这就是-Markdown-登场的时候了" class="headerlink" title="这就是 Markdown 登场的时候了"></a>这就是 Markdown 登场的时候了</h2><p>Markdown 的优点如下： </p><ul><li><p>纯文本，所以兼容性极强，可以用所有文本编辑器打开。<br>兼顾了「什么人都能打开」和「样式」。Markdown 就是纯文本，就是 .txt，所以什么人都能打开。而如上所述，你可以用它来标记文本的样式，而且语法非常简单。<br>由于是纯文本，Markdown 文稿也不会因为未来软件升级而产生不同版本之间的兼容问题，即，不会出现「我这篇稿子是用旧版 Word 写的，你用新版 Word 看可能格式会有点问题」的情况。</p></li><li><p>让你专注于文字而不是排版。</p></li><li><p>格式转换方便，Markdown 的文本你可以轻松转换为 html、电子书等。</p></li><li><p>Markdown 转 HTML 非常方便。HTML 是整个万维网（web）的标记语言，但更重要的是，它也是目前主流电子书格式所用的标记语言。无论是 EPUB, mobi，还是 Kindle 用的专有格式 .azw，都只是把一堆 HTML 文件打包而已。如果你写的是书，用 Markdown 标注格式之后，可以很方便地转为以上格式（当然这个转换工作不需要由你来做）；如果你写的是单篇的文章（例如新闻报道或专栏），未来也不排除结集出书的可能。若采用 Markdown，对于日后的文件转换工作也大有裨益。如何开始用 Markdown？继续用你习惯的写作软件即可。记事本、Word、Pages 都没问题，但请记得存成纯文本格式。就这么简单。</p></li><li><p>Markdown 的标记语法有极好的可读性。</p></li></ul><p>插入链接: </p><ul><li><a href="https://www.jianshu.com/p/7771794c88a1?msclkid=1fb103a8c7b611eca8bd8cd73728089a#%E8%BD%AC%E6%8D%A2%E4%B8%BA-HTML-%E6%96%87%E6%A1%A3">Markdown介绍及使用教程</a></li><li><a href="https://zhuanlan.zhihu.com/p/265077468?msclkid=7f270e55c7bd11ec9e490cd5ce2b3b96">hexo博客如何插入图片</a><br>插入图片：  </li><li><img src="https://th.bing.com/th/id/OIP.AjQfAi88wTpfm3XCNHUYogAAAA?pid=ImgDet&amp;rs=1" alt>  </li><li><img src="/2022/04296929/1.jpg" class></li><li><img src="/2022/04296929/2.jpeg" class></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客介绍</title>
      <link href="/2022/042843699.html"/>
      <url>/2022/042843699.html</url>
      
        <content type="html"><![CDATA[<p>临近保研和课程实训，需要大量复习的专业课和学习新技术，就在此记录我的近期学习计划。</p><h2 id="计算机科学与技术："><a href="#计算机科学与技术：" class="headerlink" title="计算机科学与技术："></a>计算机科学与技术：</h2><h3 id="1-数据结构"><a href="#1-数据结构" class="headerlink" title="1.数据结构"></a>1.数据结构</h3><h3 id="2-操作系统"><a href="#2-操作系统" class="headerlink" title="2.操作系统"></a>2.操作系统</h3><h3 id="3-计算机网络"><a href="#3-计算机网络" class="headerlink" title="3.计算机网络"></a>3.计算机网络</h3><h3 id="4-计算机组成原理"><a href="#4-计算机组成原理" class="headerlink" title="4.计算机组成原理"></a>4.计算机组成原理</h3><h3 id="5-计算机科学基本理论"><a href="#5-计算机科学基本理论" class="headerlink" title="5.计算机科学基本理论"></a>5.计算机科学基本理论</h3><h3 id="6-数据库系统"><a href="#6-数据库系统" class="headerlink" title="6.数据库系统"></a>6.数据库系统</h3><h2 id="软件工程："><a href="#软件工程：" class="headerlink" title="软件工程："></a>软件工程：</h2><h3 id="1-软件工程理论"><a href="#1-软件工程理论" class="headerlink" title="1.软件工程理论"></a>1.软件工程理论</h3><h3 id="2-软件测试与质量保证"><a href="#2-软件测试与质量保证" class="headerlink" title="2.软件测试与质量保证"></a>2.软件测试与质量保证</h3><h3 id="3-软件需求分析与系统设计"><a href="#3-软件需求分析与系统设计" class="headerlink" title="3.软件需求分析与系统设计"></a>3.软件需求分析与系统设计</h3><h3 id="4-软件项目管理与过程改进"><a href="#4-软件项目管理与过程改进" class="headerlink" title="4.软件项目管理与过程改进"></a>4.软件项目管理与过程改进</h3><h3 id="5-面向对象基本理论"><a href="#5-面向对象基本理论" class="headerlink" title="5.面向对象基本理论"></a>5.面向对象基本理论</h3><h3 id="6-程序设计基本理论"><a href="#6-程序设计基本理论" class="headerlink" title="6.程序设计基本理论"></a>6.程序设计基本理论</h3><h2 id="数学："><a href="#数学：" class="headerlink" title="数学："></a>数学：</h2><h3 id="1-高等数学"><a href="#1-高等数学" class="headerlink" title="1.高等数学"></a>1.高等数学</h3><h3 id="2-离散数学"><a href="#2-离散数学" class="headerlink" title="2.离散数学"></a>2.离散数学</h3><h3 id="3-概率论"><a href="#3-概率论" class="headerlink" title="3.概率论"></a>3.概率论</h3><h3 id="4-线性代数"><a href="#4-线性代数" class="headerlink" title="4.线性代数"></a>4.线性代数</h3><h2 id="技术："><a href="#技术：" class="headerlink" title="技术："></a>技术：</h2><h3 id="1-springboot"><a href="#1-springboot" class="headerlink" title="1.springboot"></a>1.springboot</h3><h3 id="2-vue"><a href="#2-vue" class="headerlink" title="2.vue"></a>2.vue</h3><h3 id="3-springcloud"><a href="#3-springcloud" class="headerlink" title="3.springcloud"></a>3.springcloud</h3><h3 id="4-redis"><a href="#4-redis" class="headerlink" title="4.redis"></a>4.redis</h3><h3 id="5-部署服务器"><a href="#5-部署服务器" class="headerlink" title="5.部署服务器"></a>5.部署服务器</h3><h2 id="（未完待续）"><a href="#（未完待续）" class="headerlink" title="（未完待续）"></a>（未完待续）</h2>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
